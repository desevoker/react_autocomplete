{"version":3,"sources":["components/Title/Title.tsx","components/Autocomplete/Autocomplete.tsx","data/people.ts","App.tsx","index.tsx"],"names":["Title","person","className","name","born","died","Autocomplete","people","delayInSeconds","onSelected","useState","inputValue","setInputValue","lookupQuery","setLookupQuery","isListOpened","setIsListOpened","openList","closeList","showSuggestionsAfterDelay","useCallback","debounce","query","suggestedPeople","useMemo","trim","toLowerCase","filter","includes","classNames","value","onChange","event","target","onFocus","onBlur","setTimeout","type","placeholder","role","length","map","sex","onClick","handleSuggestionClick","slug","peopleFromServer","fatherName","motherName","App","selectedPerson","setSelectedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.18b80478.chunk.js","sourcesContent":["import { Person } from '../../types/Person';\n\ntype Props = {\n  person: Person | null;\n};\n\nexport const Title:React.FC<Props> = ({ person }) => (\n  <h1 className=\"title\">\n    {person ? (\n      `${person.name} (${person.born} - ${person.died})`\n    ) : (\n      'No selected person'\n    )}\n  </h1>\n);\n","import { useState, useCallback, useMemo } from 'react';\nimport classNames from 'classnames';\nimport debounce from 'lodash.debounce';\nimport { Person } from '../../types/Person';\nimport './Autocomplete.scss';\n\nconst SEX_MALE = 'm';\nconst SEX_FEMALE = 'f';\nconst SEARCH_DELAY = 1000;\n\ntype Props = {\n  people: Person[];\n  delayInSeconds?: number;\n  onSelected?: (peson: Person | null) => void,\n};\n\nexport const Autocomplete: React.FC<Props> = ({\n  people,\n  delayInSeconds = 1,\n  onSelected = () => {},\n}) => {\n  const [inputValue, setInputValue] = useState('');\n  const [lookupQuery, setLookupQuery] = useState('');\n  const [isListOpened, setIsListOpened] = useState(false);\n\n  const openList = () => setIsListOpened(true);\n  const closeList = () => setIsListOpened(false);\n\n  const showSuggestions = (query: string) => {\n    setLookupQuery(query);\n    openList();\n  };\n\n  const showSuggestionsAfterDelay = useCallback(\n    debounce(showSuggestions, delayInSeconds * SEARCH_DELAY),\n    [delayInSeconds],\n  );\n\n  const handleInputValueChange = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    closeList();\n    setInputValue(event.target.value);\n    showSuggestionsAfterDelay(event.target.value);\n  };\n\n  const handleSuggestionClick = (person: Person) => {\n    setInputValue(person.name);\n    setLookupQuery(person.name);\n    onSelected(person);\n    closeList();\n  };\n\n  const suggestedPeople = useMemo(() => {\n    const query = lookupQuery.trim().toLowerCase();\n\n    return people.filter(\n      ({ name }) => name.toLowerCase().includes(query),\n    );\n  }, [people, lookupQuery]);\n\n  return (\n    <div\n      className={classNames('dropdown', {\n        'is-active': isListOpened,\n      })}\n    >\n      <div className=\"dropdown-trigger\">\n        <input\n          value={inputValue}\n          onChange={handleInputValueChange}\n          onFocus={openList}\n          onBlur={() => setTimeout(closeList, 200)}\n          type=\"text\"\n          placeholder=\"Enter a part of the name\"\n          className=\"input\"\n        />\n      </div>\n\n      <div className=\"dropdown-menu\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          {suggestedPeople.length ? (\n            suggestedPeople.map(person => (\n              <button\n                key={person.slug}\n                type=\"button\"\n                className={classNames('dropdown-item', 'button', 'suggestion', {\n                  'has-text-link': person.sex === SEX_MALE,\n                  'has-text-danger': person.sex === SEX_FEMALE,\n                })}\n                onClick={() => handleSuggestionClick(person)}\n              >\n                {person.name}\n              </button>\n            ))\n          ) : (\n            <div className=\"dropdown-item\">\n              <p>No matching suggestions</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { Person } from '../types/Person';\n\nexport const peopleFromServer: Person[] = [\n  {\n    name: 'Carolus Haverbeke',\n    sex: 'm',\n    born: 1832,\n    died: 1905,\n    fatherName: 'Carel Haverbeke',\n    motherName: 'Maria van Brussel',\n    slug: 'carolus-haverbeke-1832',\n  },\n  {\n    name: 'Emma de Milliano',\n    sex: 'f',\n    born: 1876,\n    died: 1956,\n    fatherName: 'Petrus de Milliano',\n    motherName: 'Sophia van Damme',\n    slug: 'emma-de-milliano-1876',\n  },\n  {\n    name: 'Maria de Rycke',\n    sex: 'f',\n    born: 1683,\n    died: 1724,\n    fatherName: 'Frederik de Rycke',\n    motherName: 'Laurentia van Vlaenderen',\n    slug: 'maria-de-rycke-1683',\n  },\n  {\n    name: 'Jan van Brussel',\n    sex: 'm',\n    born: 1714,\n    died: 1748,\n    fatherName: 'Jacobus van Brussel',\n    motherName: 'Joanna van Rooten',\n    slug: 'jan-van-brussel-1714',\n  },\n  {\n    name: 'Philibert Haverbeke',\n    sex: 'm',\n    born: 1907,\n    died: 1997,\n    fatherName: 'Emile Haverbeke',\n    motherName: 'Emma de Milliano',\n    slug: 'philibert-haverbeke-1907',\n  },\n  {\n    name: 'Jan Frans van Brussel',\n    sex: 'm',\n    born: 1761,\n    died: 1833,\n    fatherName: 'Jacobus Bernardus van Brussel',\n    motherName: null,\n    slug: 'jan-frans-van-brussel-1761',\n  },\n  {\n    name: 'Pauwels van Haverbeke',\n    sex: 'm',\n    born: 1535,\n    died: 1582,\n    fatherName: 'N. van Haverbeke',\n    motherName: null,\n    slug: 'pauwels-van-haverbeke-1535',\n  },\n  {\n    name: 'Clara Aernoudts',\n    sex: 'f',\n    born: 1918,\n    died: 2012,\n    fatherName: 'Henry Aernoudts',\n    motherName: 'Sidonie Coene',\n    slug: 'clara-aernoudts-1918',\n  },\n  {\n    name: 'Emile Haverbeke',\n    sex: 'm',\n    born: 1877,\n    died: 1968,\n    fatherName: 'Carolus Haverbeke',\n    motherName: 'Maria Sturm',\n    slug: 'emile-haverbeke-1877',\n  },\n  {\n    name: 'Lieven de Causmaecker',\n    sex: 'm',\n    born: 1696,\n    died: 1724,\n    fatherName: 'Carel de Causmaecker',\n    motherName: 'Joanna Claes',\n    slug: 'lieven-de-causmaecker-1696',\n  },\n  {\n    name: 'Pieter Haverbeke',\n    sex: 'm',\n    born: 1602,\n    died: 1642,\n    fatherName: 'Lieven van Haverbeke',\n    motherName: null,\n    slug: 'pieter-haverbeke-1602',\n  },\n  {\n    name: 'Livina Haverbeke',\n    sex: 'f',\n    born: 1692,\n    died: 1743,\n    fatherName: 'Daniel Haverbeke',\n    motherName: 'Joanna de Pape',\n    slug: 'livina-haverbeke-1692',\n  },\n  {\n    name: 'Pieter Bernard Haverbeke',\n    sex: 'm',\n    born: 1695,\n    died: 1762,\n    fatherName: 'Willem Haverbeke',\n    motherName: 'Petronella Wauters',\n    slug: 'pieter-bernard-haverbeke-1695',\n  },\n  {\n    name: 'Lieven van Haverbeke',\n    sex: 'm',\n    born: 1570,\n    died: 1636,\n    fatherName: 'Pauwels van Haverbeke',\n    motherName: 'Lievijne Jans',\n    slug: 'lieven-van-haverbeke-1570',\n  },\n  {\n    name: 'Joanna de Causmaecker',\n    sex: 'f',\n    born: 1762,\n    died: 1807,\n    fatherName: 'Bernardus de Causmaecker',\n    motherName: null,\n    slug: 'joanna-de-causmaecker-1762',\n  },\n  {\n    name: 'Willem Haverbeke',\n    sex: 'm',\n    born: 1668,\n    died: 1731,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'willem-haverbeke-1668',\n  },\n  {\n    name: 'Pieter Antone Haverbeke',\n    sex: 'm',\n    born: 1753,\n    died: 1798,\n    fatherName: 'Jan Francies Haverbeke',\n    motherName: 'Petronella de Decker',\n    slug: 'pieter-antone-haverbeke-1753',\n  },\n  {\n    name: 'Maria van Brussel',\n    sex: 'f',\n    born: 1801,\n    died: 1834,\n    fatherName: 'Jan Frans van Brussel',\n    motherName: 'Joanna de Causmaecker',\n    slug: 'maria-van-brussel-1801',\n  },\n  {\n    name: 'Angela Haverbeke',\n    sex: 'f',\n    born: 1728,\n    died: 1734,\n    fatherName: 'Pieter Bernard Haverbeke',\n    motherName: 'Livina de Vrieze',\n    slug: 'angela-haverbeke-1728',\n  },\n  {\n    name: 'Elisabeth Haverbeke',\n    sex: 'f',\n    born: 1711,\n    died: 1754,\n    fatherName: 'Jan Haverbeke',\n    motherName: 'Maria de Rycke',\n    slug: 'elisabeth-haverbeke-1711',\n  },\n  {\n    name: 'Lievijne Jans',\n    sex: 'f',\n    born: 1542,\n    died: 1582,\n    fatherName: null,\n    motherName: null,\n    slug: 'lievijne-jans-1542',\n  },\n  {\n    name: 'Bernardus de Causmaecker',\n    sex: 'm',\n    born: 1721,\n    died: 1789,\n    fatherName: 'Lieven de Causmaecker',\n    motherName: 'Livina Haverbeke',\n    slug: 'bernardus-de-causmaecker-1721',\n  },\n  {\n    name: 'Jacoba Lammens',\n    sex: 'f',\n    born: 1699,\n    died: 1740,\n    fatherName: 'Lieven Lammens',\n    motherName: 'Livina de Vrieze',\n    slug: 'jacoba-lammens-1699',\n  },\n  {\n    name: 'Pieter de Decker',\n    sex: 'm',\n    born: 1705,\n    died: 1780,\n    fatherName: 'Joos de Decker',\n    motherName: 'Petronella van de Steene',\n    slug: 'pieter-de-decker-1705',\n  },\n  {\n    name: 'Joanna de Pape',\n    sex: 'f',\n    born: 1654,\n    died: 1723,\n    fatherName: 'Vincent de Pape',\n    motherName: 'Petronella Wauters',\n    slug: 'joanna-de-pape-1654',\n  },\n  {\n    name: 'Daniel Haverbeke',\n    sex: 'm',\n    born: 1652,\n    died: 1723,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'daniel-haverbeke-1652',\n  },\n  {\n    name: 'Lieven Haverbeke',\n    sex: 'm',\n    born: 1631,\n    died: 1676,\n    fatherName: 'Pieter Haverbeke',\n    motherName: 'Anna van Hecke',\n    slug: 'lieven-haverbeke-1631',\n  },\n  {\n    name: 'Martina de Pape',\n    sex: 'f',\n    born: 1666,\n    died: 1727,\n    fatherName: 'Vincent de Pape',\n    motherName: 'Petronella Wauters',\n    slug: 'martina-de-pape-1666',\n  },\n  {\n    name: 'Jan Francies Haverbeke',\n    sex: 'm',\n    born: 1725,\n    died: 1779,\n    fatherName: 'Pieter Bernard Haverbeke',\n    motherName: 'Livina de Vrieze',\n    slug: 'jan-francies-haverbeke-1725',\n  },\n  {\n    name: 'Maria Haverbeke',\n    sex: 'm',\n    born: 1905,\n    died: 1997,\n    fatherName: 'Emile Haverbeke',\n    motherName: 'Emma de Milliano',\n    slug: 'maria-haverbeke-1905',\n  },\n  {\n    name: 'Petronella de Decker',\n    sex: 'f',\n    born: 1731,\n    died: 1781,\n    fatherName: 'Pieter de Decker',\n    motherName: 'Livina Haverbeke',\n    slug: 'petronella-de-decker-1731',\n  },\n  {\n    name: 'Livina Sierens',\n    sex: 'f',\n    born: 1761,\n    died: 1826,\n    fatherName: 'Jan Sierens',\n    motherName: 'Maria van Waes',\n    slug: 'livina-sierens-1761',\n  },\n  {\n    name: 'Laurentia Haverbeke',\n    sex: 'f',\n    born: 1710,\n    died: 1786,\n    fatherName: 'Jan Haverbeke',\n    motherName: 'Maria de Rycke',\n    slug: 'laurentia-haverbeke-1710',\n  },\n  {\n    name: 'Carel Haverbeke',\n    sex: 'm',\n    born: 1796,\n    died: 1837,\n    fatherName: 'Pieter Antone Haverbeke',\n    motherName: 'Livina Sierens',\n    slug: 'carel-haverbeke-1796',\n  },\n  {\n    name: 'Elisabeth Hercke',\n    sex: 'f',\n    born: 1632,\n    died: 1674,\n    fatherName: 'Willem Hercke',\n    motherName: 'Margriet de Brabander',\n    slug: 'elisabeth-hercke-1632',\n  },\n  {\n    name: 'Jan Haverbeke',\n    sex: 'm',\n    born: 1671,\n    died: 1731,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'jan-haverbeke-1671',\n  },\n  {\n    name: 'Anna van Hecke',\n    sex: 'f',\n    born: 1607,\n    died: 1670,\n    fatherName: 'Paschasius van Hecke',\n    motherName: 'Martijntken Beelaert',\n    slug: 'anna-van-hecke-1607',\n  },\n  {\n    name: 'Maria Sturm',\n    sex: 'f',\n    born: 1835,\n    died: 1917,\n    fatherName: 'Charles Sturm',\n    motherName: 'Seraphina Spelier',\n    slug: 'maria-sturm-1835',\n  },\n  {\n    name: 'Jacobus Bernardus van Brussel',\n    sex: 'm',\n    born: 1736,\n    died: 1809,\n    fatherName: 'Jan van Brussel',\n    motherName: 'Elisabeth Haverbeke',\n    slug: 'jacobus-bernardus-van-brussel-1736',\n  },\n];\n","import { useState } from 'react';\nimport { Person } from './types/Person';\nimport { Title } from './components/Title';\nimport { Autocomplete } from './components/Autocomplete';\nimport './App.scss';\n\nimport { peopleFromServer } from './data/people';\n\nexport const App: React.FC = () => {\n  const [selectedPerson, setSelectedPerson] = useState<Person | null>(null);\n\n  return (\n    <main className=\"section\">\n      <Title person={selectedPerson} />\n\n      <Autocomplete\n        people={peopleFromServer}\n        delayInSeconds={1}\n        onSelected={setSelectedPerson}\n      />\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}